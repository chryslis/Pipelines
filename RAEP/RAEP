#!/bin/bash

echo "Specify path to reads."
#read Reads
Reads=/home/chrys/Documents/thesis/data/analysis/DataSets/GSM530651_Dnase/DNAseSet.1.trimmed.fastq

echo "Specify path to Conncatenated Genome."
#read ConcGenome
ConcGenome=/home/chrys/Documents/thesis/data/analysis/ConcatenatedGenome/Concat.22517/ConcatenatedGenome.22517

echo "What Mark is getting aligned?"
#read Mark
Mark=DNASE1

echo "Creating outoutfolder..."
outDir=$(dirname "${ConcGenome}")
#mkdir "$outDir/Alignments.$Mark"

#echo "Results will be placed at $outDir/Alignments.$Mark"
#echo "Starting up bwa..."
#echo "Is the Genome indexed ?[y/n]"
#read check

#if [[ "$check"=="y"  ]]; then
#	echo "Skipping indexing process..."
#else
#	echo "Starting indexing process..."
#	bwa index $ConcGenome
#fi

#echo "Starting alignment..."
#bwa mem -a -t 3 -v 3 $ConcGenome $Reads > $outDir/Alignments.$Mark/$Mark.sam

#echo "Aligment done..."
#echo "Doing some converting..."

#samtools view -Sb $outDir/Alignments.$Mark/$Mark.sam -o $outDir/Alignments.$Mark/$Mark.bam
#echo "Removing sam and sorting *.bam"

#rm $outDir/Alignments.$Mark/$Mark.sam

#samtools sort $outDir/Alignments.$Mark/$Mark.bam > $outDir/Alignments.$Mark/$Mark.sorted.bam
#rm $outDir/Alignments.$Mark/$Mark.bam

#echo "Indexing *.bam"
#samtools index $outDir/Alignments.$Mark/$Mark.sorted.bam

PipeLoc=$PWD
CONSTRUCTOR=${PWD}/GenomeConstructor.pl

echo "Specify path to concatenation index."
#read Index
#Index=/home/chrys/Documents/thesis/data/analysis/ConcatenatedGenome/Concat.22517/MergeIndex.22517.bed
#Also possible to just find the Index like this
Index=$outDir/MergeIndex.*.bed

echo "Creating a Genome File."
#$CONSTRUCTOR ${ConcGenome} $outDir

sort -V -k1,1 $outDir/names.txt -o $outDir/names.txt

echo "Resorting the index file to match bam (Can be undone by sort -k1,1 -k2,2n)"
#bedtools sort -faidx $outDir/names.txt -i $Index > $outDir/ResortMergeIndex


echo "Calculating coverage..."

#bedtools coverage -sorted -abam $outDir/Alignments.$Mark/$Mark.sorted.bam -b $outDir/ResortMergeIndex > $outDir/Alignments.$Mark/$Mark.Coverage.bed
#bedtools coverage -sorted -g $outDir/names.txt -a $outDir/ResortMergeIndex -b $outDir/Alignments.$Mark/$Mark.sorted.bam   > $outDir/Alignments.$Mark/$Mark.Coverage.bed


echo "Creating annotation..."
#bedtools intersect -wo -abam $outDir/Alignments.$Mark/$Mark.sorted.bam  -b $outDir/ResortMergeIndex -bed > $outDir/Alignments.$Mark/$Mark.Annotation.bed

echo "Post-Processing Annotation file..."

#cut -f1,2,3,4,16,17 $outDir/Alignments.$Mark/$Mark.Annotation.bed > $outDir/Alignments.$Mark/$Mark.Annotation.Processed.bed 
#rm $outDir/Alignments.$Mark/$Mark.Annotation.bed

CONCAT=${PWD}/PostConcat.pl
#$CONCAT $outDir/Alignments.$Mark/$Mark.Annotation.Processed.bed  $outDir/Alignments.$Mark/$Mark.Coverage.bed $Mark > $outDir/Alignments.$Mark/$Mark.Filtered.bed

echo "Compressing intermediate Outputs..."
#tar -cvzf $outDir/Alignments.$Mark/$Mark.Annotation.Processed.bed.tar.gz $outDir/Alignments.$Mark/$Mark.Annotation.Processed.bed
#tar -cvzf $outDir/Alignments.$Mark/$Mark.Coverage.bed.tar.gz $outDir/Alignments.$Mark/$Mark.Coverage.bed

echo "Reverting IDs to feature annotation..."

#OriginalIndex=$outDir/RepeatMaskerTrack.Sorted.Cleaned.Indexed.*

REVERT=${PWD}/IDReverte.pl
#$REVERT $OriginalIndex $outDir/Alignments.$Mark/$Mark.Filtered.bed > $outDir/Alignments.$Mark/$Mark.Features.bed

echo "Constructing weight vector..."
#cut -f1 $outDir/Alignments.$Mark/$Mark.Filtered.bed | sort -u > $outDir/Alignments.$Mark/READLIST


COUNT=${PWD}/WeightVector.pl

$COUNT $outDir/Alignments.$Mark/$Mark.Features.bed  > $outDir/Alignments.$Mark/$Mark.Features.Weighted.bed

#> $outDir/Alignments.$Mark/READLIST.COUNTS
#rm $outDir/Alignments.$Mark/READLIST

#awk '{fraction = 1/$2}{print $1"\t"fraction}' $outDir/Alignments.$Mark/READLIST.COUNTS > READLIST.FRACTION
#rm $outDir/Alignments.$Mark/READLIST.COUNTS

